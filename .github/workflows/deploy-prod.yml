name: Deploy to production stand

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Ð¡heckout specific commit'
        required: false
      deploy-dev:
        description: 'Deploy to dev stand firstly'
        type: boolean
        default: true
      production-check:
        description: 'DEPLOY TO PRODUCTION'
        type: boolean
        default: false
        required: true
      dev-debug-logs:
        description: 'Enable DEBUG level logs on dev stand'
        type: boolean
        default: false
      prod-debug-logs:
        description: 'Enable DEBUG level logs on prod stand'
        type: boolean
        default: false
      dev-ip-check:
        description: 'Enable IP check on dev stand'
        type: boolean
        default: true
      prod-ip-check:
        description: 'Enable IP check on prod stand'
        type: boolean
        default: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    if: ${{ inputs.production-check }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
   
    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Cache image
    #   uses: satackey/action-docker-layer-caching@v0.0.11
    #   continue-on-error: true

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          vzalygin/samowarium:latest

  deploy-to-dev:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy-dev }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Checkout specific commit
        if: ${{ inputs.commit != '' }}
        run:	git checkout ${{ inputs.commit }}
  
      - name: Prepare configuration
        run: |
          echo ENV=DEV >> .env;
          echo TELEGRAM_TOKEN=${{ secrets.DEV_TG_TOKEN }} >> .env;
          echo ENCRYPTION='${{ secrets.DEV_ENCRYPTION }}' >> .env;
          echo VERSION=$(git rev-parse --short HEAD) >> .env;
          echo ENABLE_PROMETHEUS_METRICS_SERVER= >> .env;
      
      - name: Enable DEBUG logs
        if: ${{ inputs.dev-debug-logs }}
        run: |
          echo DEBUG= >> .env;

      - name: Enable DEBUG IP check
        if: ${{ inputs.dev-ip-check }}
        run: |
          echo IP_CHECK= >> .env;
  
      - name: Configure Docker Host
        uses: khaledez/configure-docker-host@v2
        with:
          host: ${{ secrets.DEV_HOST }}
          user: ${{ secrets.DEV_SSH_USER }}
          ssh-private-key: ${{ secrets.DEV_SSH_KEY }}
  
      - name: Pull image
        run: |
            DOCKER_TAG=latest docker compose pull samowarium || 
            exit 1

      - name: Reload container
        run: |
            DOCKER_TAG=latest docker compose -p samowarium-dev down samowarium && 
            DOCKER_TAG=latest docker compose -p samowarium-dev up -d samowarium ||
            exit 1

      - name: Prune images
        run: |
            docker image prune -f

      - name: Remove configuration files
        run: |
            rm ./.env

  deploy-to-prod:
    needs: [build-and-push-image, deploy-to-dev]
    if: |
      always() &&
      needs.build-and-push-image.result == 'success' &&
      ( needs.deploy-to-dev.result == 'success' ||
        needs.deploy-to-dev.result == 'skipped' )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout specific commit
        if: ${{ inputs.commit != '' }}
        run:	git checkout ${{ inputs.commit }}

      - name: Prepare configuration
        run: |
          echo ENV=PROD >> .env;
          echo TELEGRAM_TOKEN=${{ secrets.PROD_TG_TOKEN }} >> .env;
          echo ENCRYPTION='${{ secrets.PROD_ENCRYPTION }}' >> .env;
          echo VERSION=$(git rev-parse --short HEAD) >> .env;
          echo ENABLE_PROMETHEUS_METRICS_SERVER= >> .env;

      - name: Enable DEBUG logs
        if: ${{ inputs.prod-debug-logs }}
        run: |
          echo DEBUG= >> .env;

      - name: Enable DEBUG IP check
        if: ${{ inputs.prod-ip-check }}
        run: |
          echo IP_CHECK= >> .env;

      - name: Configure Docker Host
        uses: khaledez/configure-docker-host@v2
        with:
          host: ${{ secrets.PROD_HOST }}
          user: ${{ secrets.PROD_SSH_USER }}
          ssh-private-key: ${{ secrets.PROD_SSH_KEY }}

      - name: Pull image
        run: |
            DOCKER_TAG=latest docker compose pull samowarium || 
            exit 1

      - name: Reload container
        run: |
            DOCKER_TAG=latest docker compose -p samowarium-prod down samowarium && 
            DOCKER_TAG=latest docker compose -p samowarium-prod up -d samowarium ||
            exit 1

      - name: Prune images
        run: |
            docker image prune -f

      - name: Remove configuration files
        run: |
            rm ./.env
