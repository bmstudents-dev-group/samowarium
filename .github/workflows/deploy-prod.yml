name: Deploy to production stand

on:
  workflow_dispatch:
    inputs:
      commit:
        description: 'Commit to checkout'
        required: false
      deploy-dev:
        description: 'Deploy to dev stand'
        type: boolean
        default: true

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
   
    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Cache image
      uses: satackey/action-docker-layer-caching@v0.0.11
      continue-on-error: true

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: vzalygin/samowarium:prod
    
  deploy-to-dev:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: ${{ inputs.deploy-dev }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
   
    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}
    
    - name: Prepare configuration
      run: |
        echo ENV=DEV >> .env;
        echo TELEGRAM_TOKEN=${{ secrets.DEV_TG_TOKEN }} >> .env;
        echo VERSION=$(git rev-parse --short HEAD) >> .env;
  
    - name: Configure Docker Host
      uses: khaledez/configure-docker-host@v2
      with:
        host: ${{ secrets.DEV_HOST }}
        user: ${{ secrets.DEV_SSH_USER }}
        ssh-private-key: ${{ secrets.DEV_SSH_KEY }}

    - name: Pull image
      run: |
          docker compose pull samowarium-dev || 
          exit 1

    - name: Reload container
      run: |
          docker compose down samowarium-dev && 
          docker compose up -d samowarium-dev ||
          exit 1

  deploy-to-prod:
    needs: [build-and-push-image, deploy-to-dev]
    if: |
      always() &&
      ( needs.deploy-to-dev.result == 'success' || 
        needs.deploy-to-dev.result == 'skipped' ) 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
   
    - name: Checkout specific commit
      if: ${{ inputs.commit != '' }}
      run:	git checkout ${{ inputs.commit }}

    - name:
      run: |
        echo 'hello'
